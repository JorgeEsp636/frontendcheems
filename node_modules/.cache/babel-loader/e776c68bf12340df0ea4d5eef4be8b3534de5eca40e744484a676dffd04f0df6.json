{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\espit\\\\Desktop\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AuthLoginForm from './components/AuthLoginForm';\nimport AuthRegisterForm from './components/AuthRegisterForm';\nimport AuthForgotPassword from './components/AuthForgotPassword';\nimport TransportDashboard from './components/TransportDashboard';\nimport authService from './services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('login');\n  const [user, setUser] = useState(null);\n  const handleLogin = userData => {\n    setUser(userData);\n    setCurrentView('dashboard');\n  };\n  const handleRegister = async userData => {\n    try {\n      await authService.register(userData);\n      // Después de registrar, intentamos iniciar sesión\n      const response = await authService.login(userData.email, userData.password);\n      setUser({\n        email: userData.email,\n        role: response.role || 'user'\n      });\n      setCurrentView('dashboard');\n    } catch (error) {\n      alert('Error al registrar: ' + (error.message || 'Error desconocido'));\n    }\n  };\n  const handleResetPassword = async email => {\n    try {\n      // Aquí deberías implementar la lógica real de recuperación de contraseña\n      alert(`Se han enviado instrucciones a ${email}`);\n      setCurrentView('login');\n    } catch (error) {\n      alert('Error al procesar la solicitud: ' + (error.message || 'Error desconocido'));\n    }\n  };\n  const handleLogout = () => {\n    authService.logout();\n    setUser(null);\n    setCurrentView('login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center p-4\",\n    children: [currentView === 'login' && /*#__PURE__*/_jsxDEV(AuthLoginForm, {\n      onLogin: handleLogin,\n      onForgotPassword: () => setCurrentView('forgot'),\n      onRegister: () => setCurrentView('register')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), currentView === 'register' && /*#__PURE__*/_jsxDEV(AuthRegisterForm, {\n      onRegister: handleRegister,\n      onLogin: () => setCurrentView('login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), currentView === 'forgot' && /*#__PURE__*/_jsxDEV(AuthForgotPassword, {\n      onResetPassword: handleResetPassword,\n      onLogin: () => setCurrentView('login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), currentView === 'dashboard' && user && /*#__PURE__*/_jsxDEV(TransportDashboard, {\n      user: user,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8pm6Sxx7T4Q7bdDSPSvy1n355HE=\");\n_c = App;\nexport default App;\n\n// DONE\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AuthLoginForm","AuthRegisterForm","AuthForgotPassword","TransportDashboard","authService","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","user","setUser","handleLogin","userData","handleRegister","register","response","login","email","password","role","error","alert","message","handleResetPassword","handleLogout","logout","className","children","onLogin","onForgotPassword","onRegister","fileName","_jsxFileName","lineNumber","columnNumber","onResetPassword","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/espit/Desktop/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AuthLoginForm from './components/AuthLoginForm';\nimport AuthRegisterForm from './components/AuthRegisterForm';\nimport AuthForgotPassword from './components/AuthForgotPassword';\nimport TransportDashboard from './components/TransportDashboard';\nimport authService from './services/authService';\n\nconst App = () => {\n  const [currentView, setCurrentView] = useState('login');\n  const [user, setUser] = useState(null);\n\n  const handleLogin = (userData) => {\n    setUser(userData);\n    setCurrentView('dashboard');\n  };\n\n  const handleRegister = async (userData) => {\n    try {\n      await authService.register(userData);\n      // Después de registrar, intentamos iniciar sesión\n      const response = await authService.login(userData.email, userData.password);\n      setUser({ email: userData.email, role: response.role || 'user' });\n      setCurrentView('dashboard');\n    } catch (error) {\n      alert('Error al registrar: ' + (error.message || 'Error desconocido'));\n    }\n  };\n\n  const handleResetPassword = async (email) => {\n    try {\n      // Aquí deberías implementar la lógica real de recuperación de contraseña\n      alert(`Se han enviado instrucciones a ${email}`);\n      setCurrentView('login');\n    } catch (error) {\n      alert('Error al procesar la solicitud: ' + (error.message || 'Error desconocido'));\n    }\n  };\n\n  const handleLogout = () => {\n    authService.logout();\n    setUser(null);\n    setCurrentView('login');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center p-4\">\n      {currentView === 'login' && (\n        <AuthLoginForm\n          onLogin={handleLogin}\n          onForgotPassword={() => setCurrentView('forgot')}\n          onRegister={() => setCurrentView('register')}\n        />\n      )}\n      {currentView === 'register' && (\n        <AuthRegisterForm\n          onRegister={handleRegister}\n          onLogin={() => setCurrentView('login')}\n        />\n      )}\n      {currentView === 'forgot' && (\n        <AuthForgotPassword\n          onResetPassword={handleResetPassword}\n          onLogin={() => setCurrentView('login')}\n        />\n      )}\n      {currentView === 'dashboard' && user && (\n        <TransportDashboard user={user} onLogout={handleLogout} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n// DONE"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}