{"ast":null,"code":"import api from './api';\nconst authService = {\n  async login(email, password) {\n    try {\n      const response = await api.post('/api/token/', {\n        email,\n        password\n      });\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n        localStorage.setItem('refreshToken', response.data.refresh);\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  async register(userData) {\n    try {\n      const response = await api.post('/api/register/', userData);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message;\n    }\n  },\n  async logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n  },\n  async refreshToken() {\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) throw new Error('No refresh token');\n      const response = await api.post('/api/token/refresh/', {\n        refresh: refreshToken\n      });\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n      }\n      return response.data;\n    } catch (error) {\n      this.logout();\n      throw error;\n    }\n  },\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","authService","login","email","password","response","post","data","access","localStorage","setItem","refresh","error","_error$response","message","register","userData","_error$response2","logout","removeItem","refreshToken","getItem","Error","isAuthenticated"],"sources":["C:/Users/espit/Desktop/frontend/src/services/authService.js"],"sourcesContent":["import api from './api';\r\n\r\nconst authService = {\r\n    async login(email, password) {\r\n        try {\r\n            const response = await api.post('/api/token/', {\r\n                email,\r\n                password,\r\n            });\r\n            if (response.data.access) {\r\n                localStorage.setItem('token', response.data.access);\r\n                localStorage.setItem('refreshToken', response.data.refresh);\r\n            }\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || error.message;\r\n        }\r\n    },\r\n\r\n    async register(userData) {\r\n        try {\r\n            const response = await api.post('/api/register/', userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || error.message;\r\n        }\r\n    },\r\n\r\n    async logout() {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n    },\r\n\r\n    async refreshToken() {\r\n        try {\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            if (!refreshToken) throw new Error('No refresh token');\r\n\r\n            const response = await api.post('/api/token/refresh/', {\r\n                refresh: refreshToken,\r\n            });\r\n            \r\n            if (response.data.access) {\r\n                localStorage.setItem('token', response.data.access);\r\n            }\r\n            return response.data;\r\n        } catch (error) {\r\n            this.logout();\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    isAuthenticated() {\r\n        return !!localStorage.getItem('token');\r\n    }\r\n};\r\n\r\nexport default authService; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAChB,MAAMC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,aAAa,EAAE;QAC3CH,KAAK;QACLC;MACJ,CAAC,CAAC;MACF,IAAIC,QAAQ,CAACE,IAAI,CAACC,MAAM,EAAE;QACtBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;QACnDC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEL,QAAQ,CAACE,IAAI,CAACI,OAAO,CAAC;MAC/D;MACA,OAAON,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZ,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBN,IAAI,KAAIK,KAAK,CAACE,OAAO;IAC/C;EACJ,CAAC;EAED,MAAMC,QAAQA,CAACC,QAAQ,EAAE;IACrB,IAAI;MACA,MAAMX,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,gBAAgB,EAAEU,QAAQ,CAAC;MAC3D,OAAOX,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAK,gBAAA;MACZ,MAAM,EAAAA,gBAAA,GAAAL,KAAK,CAACP,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAIK,KAAK,CAACE,OAAO;IAC/C;EACJ,CAAC;EAED,MAAMI,MAAMA,CAAA,EAAG;IACXT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCV,YAAY,CAACU,UAAU,CAAC,cAAc,CAAC;EAC3C,CAAC;EAED,MAAMC,YAAYA,CAAA,EAAG;IACjB,IAAI;MACA,MAAMA,YAAY,GAAGX,YAAY,CAACY,OAAO,CAAC,cAAc,CAAC;MACzD,IAAI,CAACD,YAAY,EAAE,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;MAEtD,MAAMjB,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,qBAAqB,EAAE;QACnDK,OAAO,EAAES;MACb,CAAC,CAAC;MAEF,IAAIf,QAAQ,CAACE,IAAI,CAACC,MAAM,EAAE;QACtBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;MACvD;MACA,OAAOH,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZ,IAAI,CAACM,MAAM,CAAC,CAAC;MACb,MAAMN,KAAK;IACf;EACJ,CAAC;EAEDW,eAAeA,CAAA,EAAG;IACd,OAAO,CAAC,CAACd,YAAY,CAACY,OAAO,CAAC,OAAO,CAAC;EAC1C;AACJ,CAAC;AAED,eAAepB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}