{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\espit\\\\Downloads\\\\11\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AuthLoginForm from './components/AuthLoginForm';\nimport AuthRegisterForm from './components/AuthRegisterForm';\nimport AuthForgotPassword from './components/AuthForgotPassword';\nimport TransportDashboard from './components/TransportDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('login');\n  const [user, setUser] = useState(null);\n  const handleLogin = credentials => {\n    // Simular autenticación usando el rol seleccionado\n    const authenticatedUser = {\n      email: credentials.email,\n      role: credentials.role\n    };\n    setUser(authenticatedUser);\n    // Mostrar el rol del usuario después de la simulación de login\n    alert(`Has iniciado sesión como: ${credentials.role === 'admin' ? 'Administrador' : 'Usuario'}`);\n    setCurrentView('dashboard');\n  };\n  const handleRegister = credentials => {\n    // Simular registro - siempre como usuario normal\n    const registeredUser = {\n      email: credentials.email,\n      role: 'user'\n    };\n    setUser(registeredUser);\n    // Mostrar el rol del usuario después de la simulación de registro\n    alert(`Te has registrado y has iniciado sesión como: Usuario`);\n    setCurrentView('dashboard');\n  };\n  const handleResetPassword = email => {\n    // Simular recuperación de contraseña\n    alert(`Se han enviado instrucciones a ${email}`);\n    setCurrentView('login');\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setCurrentView('login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex items-center justify-center p-4\",\n    children: [currentView === 'login' && /*#__PURE__*/_jsxDEV(AuthLoginForm, {\n      onLogin: handleLogin,\n      onForgotPassword: () => setCurrentView('forgot'),\n      onRegister: () => setCurrentView('register')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), currentView === 'register' && /*#__PURE__*/_jsxDEV(AuthRegisterForm, {\n      onRegister: handleRegister,\n      onLogin: () => setCurrentView('login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), currentView === 'forgot' && /*#__PURE__*/_jsxDEV(AuthForgotPassword, {\n      onResetPassword: handleResetPassword,\n      onLogin: () => setCurrentView('login')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), currentView === 'dashboard' && user && /*#__PURE__*/_jsxDEV(TransportDashboard, {\n      user: user,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8pm6Sxx7T4Q7bdDSPSvy1n355HE=\");\n_c = App;\nexport default App;\n\n// DONE\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AuthLoginForm","AuthRegisterForm","AuthForgotPassword","TransportDashboard","jsxDEV","_jsxDEV","App","_s","currentView","setCurrentView","user","setUser","handleLogin","credentials","authenticatedUser","email","role","alert","handleRegister","registeredUser","handleResetPassword","handleLogout","className","children","onLogin","onForgotPassword","onRegister","fileName","_jsxFileName","lineNumber","columnNumber","onResetPassword","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/espit/Downloads/11/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport AuthLoginForm from './components/AuthLoginForm';\nimport AuthRegisterForm from './components/AuthRegisterForm';\nimport AuthForgotPassword from './components/AuthForgotPassword';\nimport TransportDashboard from './components/TransportDashboard';\n\nconst App = () => {\n  const [currentView, setCurrentView] = useState('login');\n  const [user, setUser] = useState(null);\n\n  const handleLogin = (credentials) => {\n    // Simular autenticación usando el rol seleccionado\n    const authenticatedUser = { \n      email: credentials.email, \n      role: credentials.role \n    };\n    setUser(authenticatedUser);\n    // Mostrar el rol del usuario después de la simulación de login\n    alert(`Has iniciado sesión como: ${credentials.role === 'admin' ? 'Administrador' : 'Usuario'}`);\n    setCurrentView('dashboard');\n  };\n\n  const handleRegister = (credentials) => {\n    // Simular registro - siempre como usuario normal\n    const registeredUser = { \n      email: credentials.email, \n      role: 'user' \n    };\n    setUser(registeredUser);\n    // Mostrar el rol del usuario después de la simulación de registro\n    alert(`Te has registrado y has iniciado sesión como: Usuario`);\n    setCurrentView('dashboard');\n  };\n\n  const handleResetPassword = (email) => {\n    // Simular recuperación de contraseña\n    alert(`Se han enviado instrucciones a ${email}`);\n    setCurrentView('login');\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setCurrentView('login');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center p-4\">\n      {currentView === 'login' && (\n        <AuthLoginForm\n          onLogin={handleLogin}\n          onForgotPassword={() => setCurrentView('forgot')}\n          onRegister={() => setCurrentView('register')}\n        />\n      )}\n      {currentView === 'register' && (\n        <AuthRegisterForm\n          onRegister={handleRegister}\n          onLogin={() => setCurrentView('login')}\n        />\n      )}\n      {currentView === 'forgot' && (\n        <AuthForgotPassword\n          onResetPassword={handleResetPassword}\n          onLogin={() => setCurrentView('login')}\n        />\n      )}\n      {currentView === 'dashboard' && user && (\n        <TransportDashboard user={user} onLogout={handleLogout} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n// DONE"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,kBAAkB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EACvD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMa,WAAW,GAAIC,WAAW,IAAK;IACnC;IACA,MAAMC,iBAAiB,GAAG;MACxBC,KAAK,EAAEF,WAAW,CAACE,KAAK;MACxBC,IAAI,EAAEH,WAAW,CAACG;IACpB,CAAC;IACDL,OAAO,CAACG,iBAAiB,CAAC;IAC1B;IACAG,KAAK,CAAC,6BAA6BJ,WAAW,CAACG,IAAI,KAAK,OAAO,GAAG,eAAe,GAAG,SAAS,EAAE,CAAC;IAChGP,cAAc,CAAC,WAAW,CAAC;EAC7B,CAAC;EAED,MAAMS,cAAc,GAAIL,WAAW,IAAK;IACtC;IACA,MAAMM,cAAc,GAAG;MACrBJ,KAAK,EAAEF,WAAW,CAACE,KAAK;MACxBC,IAAI,EAAE;IACR,CAAC;IACDL,OAAO,CAACQ,cAAc,CAAC;IACvB;IACAF,KAAK,CAAC,uDAAuD,CAAC;IAC9DR,cAAc,CAAC,WAAW,CAAC;EAC7B,CAAC;EAED,MAAMW,mBAAmB,GAAIL,KAAK,IAAK;IACrC;IACAE,KAAK,CAAC,kCAAkCF,KAAK,EAAE,CAAC;IAChDN,cAAc,CAAC,OAAO,CAAC;EACzB,CAAC;EAED,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBV,OAAO,CAAC,IAAI,CAAC;IACbF,cAAc,CAAC,OAAO,CAAC;EACzB,CAAC;EAED,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,+DAA+D;IAAAC,QAAA,GAC3Ef,WAAW,KAAK,OAAO,iBACtBH,OAAA,CAACL,aAAa;MACZwB,OAAO,EAAEZ,WAAY;MACrBa,gBAAgB,EAAEA,CAAA,KAAMhB,cAAc,CAAC,QAAQ,CAAE;MACjDiB,UAAU,EAAEA,CAAA,KAAMjB,cAAc,CAAC,UAAU;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACF,EACAtB,WAAW,KAAK,UAAU,iBACzBH,OAAA,CAACJ,gBAAgB;MACfyB,UAAU,EAAER,cAAe;MAC3BM,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAAC,OAAO;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACF,EACAtB,WAAW,KAAK,QAAQ,iBACvBH,OAAA,CAACH,kBAAkB;MACjB6B,eAAe,EAAEX,mBAAoB;MACrCI,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAAC,OAAO;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACF,EACAtB,WAAW,KAAK,WAAW,IAAIE,IAAI,iBAClCL,OAAA,CAACF,kBAAkB;MAACO,IAAI,EAAEA,IAAK;MAACsB,QAAQ,EAAEX;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAjEID,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAmET,eAAeA,GAAG;;AAElB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}